在Java中要想实现动态代理机制，需要java.lang.reflect.InvocationHandler 接口和 java.lang.reflect.Proxy 类的支持。
=============================================================================
java.lang.reflect.InvocationHandler接口的定义如下：
public interface InvocationHandler {
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable;
}
Object proxy:被代理的对象
Method method:要调用的方法
Object[] args:方法调用时所需要参数
=============================================================================
java.lang.reflect.Proxy类的定义如下：
public static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h) throws IllegalArgumentException
CLassLoader loader:类的加载器
Class<?> interfaces:得到全部的接口
InvocationHandler h:得到InvocationHandler接口的子类的实例



